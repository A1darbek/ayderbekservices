server:
  port: 2020
spring:
  security:
      oauth2:
        client:
          registration:
            keycloak:
              authorization-grant-type: client_credentials
              client-id: spotify_microservice
              client-secret: y1fSNUGE94r6n7TItfGiHLgtKYBZR0xC
              provider: keycloak
          provider:
            keycloak:
              token-uri: http://localhost:8080/realms/Spotify/protocol/openid-connect/token
        resourceserver:
          jwt:
            issuer-uri: http://localhost:8080/realms/Spotify
            jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  application:
    name: query-service
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    enabled: true
  instance:
    hostname: localhost
logging:
  level:
    com.queryservice.client: DEBUG
    com.queryservice.rest: DEBUG
